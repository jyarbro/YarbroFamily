@page
@model App.Areas.Homes.Pages.Homes.IndexModel
@inject IAuthorizationService Auth
@{ ViewData["Title"] = "Homes"; }

@if (Model.Homes.Any()) {
    @if (await Auth.IsParent(User)) {
        <p class="mb-3">
            <a class="btn btn-primary" asp-area="HomeReviews" asp-page="./CreateHome">Add a Home</a>
            <span class="pl-4">Sorted by: <select asp-for="Sort" asp-items="@Model.SortOptions"></select></span>
        </p>
    }

    @foreach (var home in Model.Homes.Where(o => !o.Finished)) {
        <div class="w-100 clickable py-3">
            <a class="h5" asp-page="./HomeDetails" asp-route-id="@home.Id">
                @(home.Address) <span class="badge badge-warning">Unfinished</span>
            </a>
        </div>
    }

    <table class="table table-hover">
        <tbody>
            @foreach (var home in Model.Homes.Where(o => o.Available && o.Finished)) {
                <tr class="row clickable @(home.Available ? "" : "opacity-60")">
                    <td class="col-2 d-block d-lg-none text-center">
                        <p class="badge badge-primary"><span class="h4 font-weight-bold">@($"{home.Score:0}")</span></p>
                    </td>
                    <td class="col">
                        <span class="d-none d-lg-inline">
                            <a class="h5" asp-page="./HomeDetails" asp-route-id="@home.Id">
                                @(home.Address)@(home.Available ? "" : Html.Raw(@" <span class=""badge badge-danger"">Off-market</span>"))@(home.Finished? "" : Html.Raw(@" <span class=""badge badge-warning"">Unfinished</span>"))
                            </a>
                        </span>
                        <div class="d-block d-lg-none">
                            <p><a class="h5" asp-page="./HomeDetails" asp-route-id="@home.Id">@home.HouseNumber @home.StreetName</a></p>
                            <p><a class="h5" asp-page="./HomeDetails" asp-route-id="@home.Id">@home.City, @home.Zip @home.State</a></p>
                            <p>Updated <passed-time time="@home.Updated" /></p>
                            <p>
                                <span class="badge badge-primary">@($"{home.BaseScore:0.#}")</span>
                                @foreach (var userScore in home.UserScores) {
                                    <span class="badge badge-light" title="@userScore.Name">@userScore.Score</span>
                                }
                            </p>
                        </div>
                    </td>
                    <td class="col-1 d-none d-lg-inline text-center">
                        <p class="h3 font-weight-bold">
                            <span class="badge badge-primary">@($"{home.Score:0.#}")</span>
                        </p>
                    </td>
                    <td class="col-3 d-none d-lg-inline">
                        <p class="font-small mb-1">
                            Base Score:
                            <span class="badge badge-primary" title="Score Breakdown" data-toggle="popover" data-placement="bottom" data-trigger="hover" data-html="true" data-content="<p>Cost: @($"{home.CostScore:0.#}")</p><p>Space: @($"{home.SpaceScore:0.#}")</p><p>Bedrooms: @($"{home.BedroomsScore:0.#}")</p><p>Bathrooms: @($"{home.BathroomsScore:0.#}")</p>">@($"{home.BaseScore:0.#}")</span>
                        </p>
                        <p class="font-small mb-1">
                            Family Scores:
                            @foreach (var userScore in home.UserScores) {
                                <span class="badge badge-primary" title="@userScore.Name">@userScore.Score</span>
                            }
                        </p>
                        <p class="font-smaller">
                            @if (home.Updated > DateTime.Now.AddDays(-1)) {
                                <span class="font-weight-bold">Updated <passed-time time="@home.Updated" /> by @home.UpdatedBy</span>
                            }
                            else {
                                <span>Updated <passed-time time="@home.Updated" /> by @home.UpdatedBy</span>
                            }
                        </p>
                        <p class="font-smaller">
                            @if (home.Created > DateTime.Now.AddDays(-1)) {
                                <span class="font-weight-bold">Created <passed-time time="@home.Created" /> by @home.CreatedBy</span>
                            }
                            else {
                                <span>Created <passed-time time="@home.Created" /> by @home.CreatedBy</span>
                            }
                        </p>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @foreach (var home in Model.Homes.Where(o => !o.Available)) {
        <div class="row clickable @(home.Available ? "" : "opacity-60")">
            <a class="h5" asp-page="./HomeDetails" asp-route-id="@home.Id">
                @(home.Address) <span class="badge badge-light">Off-market</span>
            </a>
        </div>
    }
}

@section Scripts {
    <script>
        let pageAddress = "@Url.Page("./Index")";

        $(function () {
            $('select[name="Sort"]').on('change', function () {
                window.location = pageAddress + "?sort=" + this.value;
            });
        });
    </script>
}